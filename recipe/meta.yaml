{% set name = "google-cloud-kms" %}
{% set version = "3.3.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name.replace("-", "_") }}-{{ version }}.tar.gz
  sha256: 0dd5d2215a0814c692d4845be61cbc2e487e13c95e4363e7855001c6c550a6af

build:
  number: 0
  script: {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation
  skip: True  # [py<37]

requirements:
  host:
    - python
    - pip
    - wheel
    - setuptools
  run:
    - python
    - google-api-core-grpc >=1.34.1,<2.0.0dev|>=2.11.*,<3.0.0dev
    - google-auth >=2.14.1,<3.0.0dev,!=2.24.0,!=2.25.0
    - proto-plus >=1.22.3,<2.0.0dev  # [py<=312]
    - proto-plus >=1.25.0,<2.0.0dev  # [py>312]
    - protobuf >=3.20.2,<6.0.0dev,!=4.21.0,!=4.21.1,!=4.21.2,!=4.21.3,!=4.21.4,!=4.21.5
    - grpc-google-iam-v1 >=0.12.4,<1.0.0dev

test:
  source_files:
    - tests
  imports:
    - google.cloud.kms
  commands:
    - pip check
    - pytest -v tests/unit
  requires:
    - pip
    - pytest
    - pytest-asyncio

about:
  home: https://github.com/googleapis/python-kms
  summary: Google Cloud Kms API client library
  license: Apache-2.0
  license_family: APACHE
  license_file: LICENSE
  doc_url: https://cloud.google.com/kms/docs/
  dev_url: https://github.com/googleapis/python-kms
  description: |
    Google Cloud Key Management Service: a cloud-hosted key management service that lets you manage cryptographic keys for your cloud services the same way you do on-premises. 
    You can generate, use, rotate, and destroy AES256, RSA 2048, RSA 3072, RSA 4096, EC P256, and EC P384 cryptographic keys. 
    Cloud KMS is integrated with Cloud IAM and Cloud Audit Logging so that you can manage permissions on individual keys and monitor how these are used. 
    Use Cloud KMS to protect secrets and other sensitive data that you need to store in Google Cloud Platform.

extra:
  recipe-maintainers:
    - travisbickle84
    - xylar
